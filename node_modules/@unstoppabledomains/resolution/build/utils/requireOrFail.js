"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var configurationError_1 = __importStar(require("../errors/configurationError"));
/**
 * Function tries to require module and throw error if module is not found.
 * @param module - Module name or path
 * @param dependencyName NPM name of the requested module
 * @param allowedVersions Allowed versions of requested module
 * @throws ConfigurationError
 */
function requireOrFail(module, dependencyName, allowedVersions) {
    try {
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        return require(module);
    }
    catch (e) {
        throw new configurationError_1.default(configurationError_1.ConfigurationErrorCode.DependencyMissing, {
            dependency: dependencyName,
            version: allowedVersions,
        });
    }
}
exports.requireOrFail = requireOrFail;
